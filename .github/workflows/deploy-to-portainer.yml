name: Deploy to Portainer

on:
  workflow_dispatch:
    inputs:
      portainer_api_url:
        description: "Portainer API URL"
        required: true
        default: "https://portainer2.dustineden.de/api"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ip-monitor:latest .

      # Push the Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ip-monitor:latest

      # Deploy to Portainer
      - name: Deploy to Portainer
        run: |
          curl -s -X POST "${{ github.event.inputs.portainer_api_url }}/endpoints/1/docker/containers/create" \
            -H "Authorization: Bearer ${{ secrets.PORTAINER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "Image": "${{ secrets.DOCKER_USERNAME }}/ip-monitor:latest",
              "Env": [
                "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}",
                "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}",
                "CLOUDFLARE_ZONE_ID=${{ secrets.CLOUDFLARE_ZONE_ID }}",
                "DNS_RECORD_ID=${{ secrets.DNS_RECORD_ID }}",
                "DNS_RECORD_NAME=${{ secrets.DNS_RECORD_NAME }}"
              ],
              "HostConfig": {
                "RestartPolicy": {
                  "Name": "always"
                }
              }
            }' | jq -r '.Id' > container_id.txt

          CONTAINER_ID=$(cat container_id.txt)
          curl -s -X POST "${{ github.event.inputs.portainer_api_url }}/endpoints/1/docker/containers/$CONTAINER_ID/start" \
            -H "Authorization: Bearer ${{ secrets.PORTAINER_API_KEY }}"

      # Clean up
      - name: Cleanup
        run: rm -f container_id.txt
